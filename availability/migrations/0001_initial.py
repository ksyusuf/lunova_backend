# Generated by Django 5.2.4 on 2025-10-03 16:14

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppointmentSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('capacity', models.PositiveIntegerField(default=1)),
                ('is_available', models.BooleanField(default=True)),
                ('expert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_slots', to='accounts.expertprofile')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_slots', to='accounts.service')),
            ],
            options={
                'indexes': [models.Index(fields=['expert', 'date'], name='availabilit_expert__e61aa7_idx')],
                'unique_together': {('expert', 'service', 'date', 'start_time', 'end_time')},
            },
        ),
        migrations.CreateModel(
            name='AvailabilityException',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('exception_type', models.CharField(choices=[('cancel', 'İptal'), ('add', 'Ekstra')], max_length=10)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
                ('is_recurring', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability_exceptions', to='accounts.expertprofile')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='availability_exceptions', to='accounts.service')),
            ],
            options={
                'verbose_name': 'Availability Exception',
                'verbose_name_plural': 'Availability Exceptions',
                'indexes': [models.Index(fields=['expert', 'date'], name='availabilit_expert__5863d1_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(models.Q(('end_time__isnull', False), ('exception_type', 'add'), ('start_time__isnull', False)), ('exception_type', 'cancel'), _connector='OR'), name='exception_type_time_validation'), models.CheckConstraint(condition=models.Q(('start_time__lt', models.F('end_time')), ('start_time__isnull', True), _connector='OR'), name='exception_start_before_end')],
            },
        ),
        migrations.CreateModel(
            name='WeeklyAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.PositiveSmallIntegerField(choices=[(0, 'Pazartesi'), (1, 'Salı'), (2, 'Çarşamba'), (3, 'Perşembe'), (4, 'Cuma'), (5, 'Cumartesi'), (6, 'Pazar')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('slot_minutes', models.PositiveIntegerField(default=50)),
                ('capacity', models.PositiveIntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weekly_availabilities', to='accounts.expertprofile')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='weekly_availabilities', to='accounts.service')),
            ],
            options={
                'constraints': [models.CheckConstraint(condition=models.Q(('start_time__lt', models.F('end_time'))), name='weekly_availability_start_before_end'), models.UniqueConstraint(fields=('expert', 'day_of_week', 'service', 'start_time', 'end_time'), name='unique_expert_service_day_time')],
            },
        ),
    ]
